<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.wong.jobs.dao.TalentMarketMapper">
  <resultMap id="BaseResultMap" type="pers.wong.jobs.entity.TalentMarket">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="ability" jdbcType="VARCHAR" property="ability" />
    <result column="want_salary_floor" jdbcType="REAL" property="wantSalaryFloor" />
    <result column="want_salary_ceiling" jdbcType="REAL" property="wantSalaryCeiling" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="is_deleted" jdbcType="CHAR" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, user_id, ability, want_salary_floor, want_salary_ceiling, status, createtime, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="pers.wong.jobs.entity.TalentMarketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_talent_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_talent_market
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job_talent_market
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pers.wong.jobs.entity.TalentMarketExample">
    delete from job_talent_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.wong.jobs.entity.TalentMarket">
    insert into job_talent_market (pid, user_id, ability, 
      want_salary_floor, want_salary_ceiling, status, 
      createtime, is_deleted)
    values (#{pid,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ability,jdbcType=VARCHAR}, 
      #{wantSalaryFloor,jdbcType=REAL}, #{wantSalaryCeiling,jdbcType=REAL}, #{status,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="pers.wong.jobs.entity.TalentMarket">
    insert into job_talent_market
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="ability != null">
        ability,
      </if>
      <if test="wantSalaryFloor != null">
        want_salary_floor,
      </if>
      <if test="wantSalaryCeiling != null">
        want_salary_ceiling,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ability != null">
        #{ability,jdbcType=VARCHAR},
      </if>
      <if test="wantSalaryFloor != null">
        #{wantSalaryFloor,jdbcType=REAL},
      </if>
      <if test="wantSalaryCeiling != null">
        #{wantSalaryCeiling,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.wong.jobs.entity.TalentMarketExample" resultType="java.lang.Long">
    select count(*) from job_talent_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job_talent_market
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.ability != null">
        ability = #{record.ability,jdbcType=VARCHAR},
      </if>
      <if test="record.wantSalaryFloor != null">
        want_salary_floor = #{record.wantSalaryFloor,jdbcType=REAL},
      </if>
      <if test="record.wantSalaryCeiling != null">
        want_salary_ceiling = #{record.wantSalaryCeiling,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job_talent_market
    set pid = #{record.pid,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      ability = #{record.ability,jdbcType=VARCHAR},
      want_salary_floor = #{record.wantSalaryFloor,jdbcType=REAL},
      want_salary_ceiling = #{record.wantSalaryCeiling,jdbcType=REAL},
      status = #{record.status,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.wong.jobs.entity.TalentMarket">
    update job_talent_market
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ability != null">
        ability = #{ability,jdbcType=VARCHAR},
      </if>
      <if test="wantSalaryFloor != null">
        want_salary_floor = #{wantSalaryFloor,jdbcType=REAL},
      </if>
      <if test="wantSalaryCeiling != null">
        want_salary_ceiling = #{wantSalaryCeiling,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=CHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.wong.jobs.entity.TalentMarket">
    update job_talent_market
    set user_id = #{userId,jdbcType=INTEGER},
      ability = #{ability,jdbcType=VARCHAR},
      want_salary_floor = #{wantSalaryFloor,jdbcType=REAL},
      want_salary_ceiling = #{wantSalaryCeiling,jdbcType=REAL},
      status = #{status,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=CHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>